version: '2'
services:
  server:
    restart: always
    build:
       context: docker
    container_name: starket_server
    depends_on:
      - db
    volumes:
      - ${CONFIG_FILE}:/opt/server/config
    environment:
      CONFIG_FILE: opt/server/config/config_prod.json
      DB_URI: host=db port=5432 user=starket password=wordpass dbname=starket_db sslmode=disable
      TS_URI: host=ts port=5432 user=starket password=wordpass dbname=starket_ts sslmode=disable
  db:
    restart: always
    image: timescale/timescaledb:latest
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: starket_db
      POSTGRES_PASSWORD: wordpass
      POSTGRES_USER: starket
      B_PATH: /opt/server/database/
    volumes:
      - db_volume:/opt/server/database/

  proxy:
    build:
        context: docker
        dockerfile: Dockerfile.proxy
    volumes:
    - letsencrypt_certs:/etc/nginx/certs
    - letsencrypt_www:/var/www/letsencrypt

    ports:
    - "80:80"
    - "443:443"
    restart: always

  web:
    build:
      context: docker
      dockerfile: Dockerfile.web
    volumes:
      - ${FILE_SERVE}:/usr/share/nginx/html

  letsencrypt:
    build:
      context: docker
      dockerfile: Dockerfile.certs
    command: /bin/true
    volumes:
    - letsencrypt_certs:/etc/letsencrypt
    - letsencrypt_www:/var/www/letsencrypt

volumes:
  db_volume:
  letsencrypt_certs:
  letsencrypt_www: